// người dùng
Table Users {
    user_id int [pk, increment]
    username varchar
    email varchar
    password varchar
    full_name varchar
    phone_number varchar
    created_at date
    updated_at date
}

Table Ticket_Types {
    ticket_type_id int [pk, increment]
    type_name varchar
    description text
}

Table Events {
     event_id INT AUTO_INCREMENT PRIMARY KEY,
    event_name VARCHAR(100) NOT NULL,
    event_date DATE NOT NULL,
    location VARCHAR(255),
    ticket_type_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ticket_type_id) REFERENCES Ticket_Types(ticket_type_id)
}

CREATE TABLE Seats (
    seat_id INT AUTO_INCREMENT PRIMARY KEY,
    seat_number VARCHAR(20) NOT NULL,
    event_id INT,
    status ENUM('available', 'booked') DEFAULT 'available',
    FOREIGN KEY (event_id) REFERENCES Events(event_id)
);

CREATE TABLE Tickets (
    ticket_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    event_id INT,
    seat_id INT NULL,  -- Có thể không có chỗ ngồi cụ thể (đối với vé xe khách hoặc tàu hỏa)
    purchase_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    price DECIMAL(10, 2) NOT NULL,
    status ENUM('booked', 'paid', 'cancelled') DEFAULT 'booked',
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (event_id) REFERENCES Events(event_id),
    FOREIGN KEY (seat_id) REFERENCES Seats(seat_id)
);

CREATE TABLE Payments (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    ticket_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    payment_method ENUM('credit_card', 'paypal', 'bank_transfer') NOT NULL,
    FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)
);

// Kiểm Tra Tình Trạng Chỗ Ngồi Của Sự Kiện

// Kiểm Tra Vé Đã Bán Cho Một Sự Kiện

// Kiểm Tra Các Vé Của Người Dùng

// Kiểm Tra Tổng Số Vé Đã Bán Theo Loại Vé